{
  "openapi": "3.0.2",
  "info": {
    "title": "NatiqQuran Api",
    "version": "0.0.7"
  },
  "servers": [
    {
      "url": "https://api.natiq.net"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "tags": [
    {
      "name": "general",
      "description": "Simple public api's"
    },
    {
      "name": "account",
      "description": "For authorization, and users"
    },
    {
      "name": "user",
      "description": "List, View, Edit & Delete users"
    },
    {
      "name": "organization",
      "description": "Manage organizations"
    },
    {
      "name": "permission",
      "description": "Manage permissions"
    },
    {
      "name": "quran",
      "description": "All the quran related routers"
    },
    {
      "name": "translation",
      "description": "Manage translation"
    },
    {
      "name": "phrase",
      "description": "Manage phrase"
    },
    {
      "name": "report",
      "description": "Technical reports"
    }
  ],
  "paths": {
    "/account/sendCode": {
      "post": {
        "description": "Send code for sign in or sign up",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "\\.[Ii][Oo]$",
                    "description": "The email address",
                    "example": "info@natiq.com"
                  }
                }
              }
            }
          }
        },
        "tags": ["account"],
        "responses": {
          "200": {
            "description": "Code sended."
          }
        }
      }
    },
    "/account/verify": {
      "post": {
        "description": "Return the new user token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address",
                    "example": "info@natiq.com"
                  },
                  "code": {
                    "type": "number",
                    "description": "The code",
                    "minLength": 6,
                    "maxLength": 6,
                    "example": 123456
                  }
                }
              }
            }
          }
        },
        "tags": ["account"],
        "responses": {
          "200": {
            "description": "Returns the new user token"
          }
        }
      }
    },
    "/account/logout": {
      "get": {
        "description": "Expire the user token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["account"],
        "responses": {
          "200": {
            "description": "Expires the token of user"
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Get the list of all users",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Returns the list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Unique identifier of the user"
                      },
                      "email": {
                        "type": "string",
                        "description": "Primary email address of the user, if available"
                      },
                      "username": {
                        "type": "string",
                        "description": "Username of the user"
                      },
                      "first_name": {
                        "type": "string",
                        "description": "First name of the user, if available"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "Last name of the user, if available"
                      },
                      "birthday": {
                        "type": "string",
                        "format": "date",
                        "description": "Birthday of the user, if available"
                      },
                      "profile_image": {
                        "type": "string",
                        "description": "URL of the user's profile image, if available"
                      },
                      "language": {
                        "type": "string",
                        "description": "Preferred language of the user, if available"
                      }
                    },
                    "required": ["uuid", "username"]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new account",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The unique username for new profile",
                    "example": "Abbas123",
                    "minLength": 6,
                    "maxLength": 12
                  },
                  "primary_email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "\\.[Ii][Oo]$",
                    "description": "Unique email for the a account",
                    "example": "info@natiq.com"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The first name of user",
                    "example": "Abbas",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name of user",
                    "example": "Mowzoon",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "birthday": {
                    "type": "string",
                    "description": "Birthday date of user profile, minDate is 200 years past",
                    "example": "1988-03-12"
                  },
                  "profile_image": {
                    "type": "string",
                    "description": "The url of a profile image",
                    "example": "https://assets.natiq.com/mahdi-profile-image.jpg"
                  },
                  "language": {
                    "type": "string",
                    "description": "User's speaking language.",
                    "example": "en",
                    "minLength": 1,
                    "maxLength": 2
                  }
                },
                "required": [
                  "username",
                  "email",
                  "first_name",
                  "last_name",
                  "birthday",
                  "language"
                ]
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "New account created"
          }
        }
      }
    },
    "/user/{user_uuid}": {
      "get": {
        "description": "Return's single user profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Return's single user profile"
          }
        }
      },
      "post": {
        "description": "Edit the user full profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The unique username for new profile",
                    "example": "Abbas123",
                    "minLength": 6,
                    "maxLength": 12
                  },
                  "first_name": {
                    "type": "string",
                    "description": "The first name of user",
                    "example": "Abbas",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "last_name": {
                    "type": "string",
                    "description": "The last name of user",
                    "example": "Mowzoon",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "birthday": {
                    "type": "string",
                    "description": "The date of the birth, minDate is 200 years past",
                    "example": "1989-12-2"
                  },
                  "profile_image": {
                    "type": "string",
                    "description": "The url of a profile image",
                    "example": "https://assets.natiq.com/mahdi-profile-image.jpg"
                  },
                  "primary_email": {
                    "type": "string",

                    "description": "The primary email of the user",
                    "example": "natiq@example.com"
                  }
                },
                "required": ["username", "first_name", "last_name"]
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "User full profile edited"
          }
        }
      },
      "delete": {
        "description": "Delete's single user profile",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "description": "Return's the user profile from auth token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "Return's the user profile."
          }
        }
      },
      "post": {
        "description": "Edit's the user profile from auth token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The unique username for user",
                    "example": "mahdidev",
                    "minLength": 6,
                    "maxLength": 12
                  },
                  "first_name": {
                    "type": "string",
                    "description": "First name of user profile",
                    "example": "Mahdi",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Last name of user profile",
                    "example": "Muslimi",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "birthday": {
                    "type": "string",
                    "description": "Birthday date of user profile, minDate is 200 years past",
                    "example": "1988-03-12"
                  },
                  "profile_image": {
                    "type": "string",
                    "description": "Profile image of user profile.",
                    "example": "https:/..."
                  },
                  "language": {
                    "type": "string",
                    "description": "User's speaking language.",
                    "example": "en",
                    "minLength": 1,
                    "maxLength": 2
                  }
                }
              }
            }
          }
        },
        "tags": ["user"],
        "responses": {
          "200": {
            "description": "This means new organization created"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "description": "Return the list of all organizations",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the list of all organizations"
          }
        }
      },
      "post": {
        "description": "Add the new organization",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The unique username for new organization",
                    "example": "github",
                    "minLength": 6,
                    "maxLength": 12
                  },
                  "name": {
                    "type": "string",
                    "description": "The full name of organization",
                    "example": "github organization",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "primary_name": {
                    "type": "string",
                    "description": "The primary name for organization",
                    "example": "github",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "profile_image": {
                    "type": "string",
                    "description": "The url of a profile image",
                    "example": "https://..."
                  },
                  "established_date": {
                    "type": "string",
                    "description": "The established date of organization(company), minDate is 200 year past",
                    "example": "1988-03-12"
                  },
                  "national_id": {
                    "type": "string",
                    "description": "The national id of a company",
                    "minLength": 11,
                    "maxLength": 11,
                    "example": "12345678911"
                  }
                },
                "required": [
                  "username",
                  "name",
                  "established_date",
                  "national_id"
                ]
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "This means new organization created"
          }
        }
      }
    },
    "/organization/{organization_uuid}": {
      "get": {
        "description": "View organization with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "organization_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the organization with id you specified"
          }
        }
      },
      "post": {
        "description": "Edit permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "organization_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The unique username for new organization",
                    "example": "github",
                    "minLength": 6,
                    "maxLength": 12
                  },
                  "name": {
                    "type": "string",
                    "description": "The full name of organization",
                    "example": "github organization",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "profile_image": {
                    "type": "string",
                    "description": "The url of a profile image",
                    "example": "https://..."
                  },
                  "established_date": {
                    "type": "string",
                    "description": "The established date of organization(company), minYear is 200 year past",
                    "example": "1988-03-12"
                  },
                  "national_id": {
                    "type": "string",
                    "description": "The national id of a company",
                    "minLength": 11,
                    "maxLength": 11,
                    "example": "12345678911"
                  }
                }
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Organization with id you specified edited"
          }
        }
      },
      "delete": {
        "description": "Delete a single organization with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "organization_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "The organization with id you specified deleted"
          }
        }
      }
    },
    "/organization/name": {
      "post": {
        "description": "Add the organization name in another language",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name",
                    "example": "ali",
                    "minLength": 1,
                    "maxLength": 16
                  },
                  "language": {
                    "type": "string",
                    "description": "Language",
                    "minLength": 2,
                    "maxLength": 2,
                    "example": "en"
                  }
                }
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Organization name in another language added"
          }
        }
      }
    },
    "/organization/name/{name_uuid}": {
      "get": {
        "description": "View the organization name in another language with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "name_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "Returns the organization name in another language with id you specified"
          }
        }
      },
      "post": {
        "description": "Edit the organization name in another language with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "name_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name",
                    "example": "ali",
                    "minLength": 1,
                    "maxLength": 16
                  }
                }
              }
            }
          }
        },
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "The organization name in another language with id you specified edited"
          }
        }
      },
      "delete": {
        "description": "Delete the organization name in another language with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "name_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["organization"],
        "responses": {
          "200": {
            "description": "The organization name in another language with id you specified deleted"
          }
        }
      }
    },
    "/permission": {
      "get": {
        "description": "Ruturn the list of all permissions",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Returns the list of all permissions"
          }
        }
      },
      "post": {
        "description": "Add new permission",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "description": "The user uuid or * for all users",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "object": {
                    "type": "string",
                    "description": "The controller that the user need to access",
                    "example": "Translation, Reciters & etc"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action for controller & etc",
                    "example": "Add, Edit, View, List, Delete & etc"
                  },
                  "conditions": {
                    "items": {},
                    "type": "array",
                    "description": "Array of conditions, each condition is an object has name & value, currently only possible condition is isOwner(Boolean)",
                    "example": "[{ \"name\": \"isOwner\", \"value\":\"true\"]"
                  }
                }
              }
            }
          }
        },
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "This means new permission created"
          }
        }
      }
    },
    "/permission/{permission_uuid}": {
      "get": {
        "description": "View permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "permission_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Returns the permission with id you specified"
          }
        }
      },
      "post": {
        "description": "Edit permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "permission_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "description": "The user uuid or * for all users",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "object": {
                    "type": "string",
                    "description": "The controller that the user need to access",
                    "example": "Translation, Reciters & etc"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action for controller & etc",
                    "example": "Add, Edit, View, List, Delete & etc"
                  },
                  "conditions": {
                    "items": {},
                    "type": "array",
                    "description": "Array of conditions, each condition is an object includ has name & value, currently only possible condition is isOwner(Boolean)",
                    "example": "[{ \"name\": \"isOwner\", \"value\":\"true\"]"
                  }
                }
              }
            }
          }
        },
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Permission with id you specified edited"
          }
        }
      },
      "delete": {
        "description": "Delete permission with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "permission_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["permission"],
        "responses": {
          "200": {
            "description": "Permission with id you specified deleted"
          }
        }
      }
    },
    "/mushaf": {
      "get": {
        "summary": "Get the list of mushaf",
        "description": "Returns the list of mushafs",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "description": "Field to sort the results by",
            "schema": {
              "type": "string",
              "enum": ["name", "createTime", "updateTime"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "order",
            "description": "Order of the results. 'asc' for ascending and 'desc' for descending.",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "from",
            "description": "The starting index of the mushafs list",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "to",
            "description": "The ending index of the mushafs list",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Returns the mushafs list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "UUID of the mushaf"
                      },
                      "name": {
                        "type": "string",
                        "description": "Full name of the mushaf"
                      },
                      "short_name": {
                        "type": "string",
                        "description": "Short name of the mushaf"
                      },
                      "source": {
                        "type": "string",
                        "description": "Source of the mushaf"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "uuid": "ccbd8806-53e8-4658-8281-3aed10b50898",
                    "short_name": "hafs",
                    "name": "Hafs an Asem",
                    "source": "tanzil"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "description": "Add a new mushaf",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "short_name": {
                    "type": "string",
                    "description": "The mushaf short name, must be one word with only '_' and {'1'..'9'}.",
                    "example": "hafs"
                  },
                  "name": {
                    "type": "string",
                    "description": "The full name of the mushaf.",
                    "example": "Hafs an Asem"
                  },
                  "source": {
                    "type": "string",
                    "description": "The source of the mushaf's text.",
                    "example": "tanzil"
                  }
                }
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The new mushaf has been created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Added"
                }
              }
            }
          }
        }
      }
    },
    "/mushaf/{mushaf_uuid}": {
      "get": {
        "description": "View mushaf with the id you specified",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "mushaf_uuid",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the mushaf to view",
              "example": "ccbd8806-53e8-4658-2381-3aed10b50898"
            }
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Returns the mushaf with the id you specified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "UUID of the mushaf"
                    },
                    "short_name": {
                      "type": "string",
                      "description": "Short name of the mushaf"
                    },
                    "name": {
                      "type": "string",
                      "description": "Full name of the mushaf"
                    },
                    "source": {
                      "type": "string",
                      "description": "Source of the mushaf"
                    }
                  }
                },
                "example": {
                  "uuid": "ccbd8806-53e8-4658-8281-3aed10b50898",
                  "short_name": "hafs",
                  "name": "Hafs an Asem",
                  "source": "tanzil"
                }
              }
            }
          },
          "404": {
            "description": "Mushaf not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Edit mushaf with the UUID you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "mushaf_uuid",
            "description": "The UUID of the mushaf to edit",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ccbd8806-53e8-4658-8281-3aed10b50898"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "short_name": {
                    "type": "string",
                    "description": "The mushaf short name, must be one word with only '_' and {'1'..'9'}.",
                    "example": "hafs"
                  },
                  "name": {
                    "type": "string",
                    "description": "The full name of the mushaf.",
                    "example": "Hafs an Asem"
                  },
                  "source": {
                    "type": "string",
                    "description": "The source of the mushaf's text.",
                    "example": "tanzil"
                  }
                },
                "required": ["short_name", "name", "source"]
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Mushaf with the UUID you specified has been edited successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Edited"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a mushaf by the specified UUID",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "mushaf_uuid",
            "description": "The UUID of the mushaf to delete",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ccbd8806-53e8-4658-8281-3aed10b50898"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Mushaf deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Deleted"
                }
              }
            }
          }
        }
      }
    },
    "/surah": {
      "get": {
        "summary": "Get the list of surahs",
        "description": "This endpoint returns a list of surahs based on the provided query parameters.",
        "parameters": [
          {
            "name": "mushaf",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "default": "hafs"
            },
            "description": "The mushaf name to filter the surahs."
          },
          {
            "name": "lang_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "en"
            },
            "description": "The language code for surah translations."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["name", "number", "createTime", "updateTime"]
            },
            "description": "Sorting criteria for the surah list."
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Sort order (ascending or descending)."
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Start index for pagination."
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": "End index for pagination."
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Successful response containing a list of surahs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the surah."
                      },
                      "number": {
                        "type": "integer",
                        "description": "Surah number."
                      },
                      "period": {
                        "type": "string",
                        "description": "The period of revelation (e.g., Makki or Madani)."
                      },
                      "number_of_ayahs": {
                        "type": "integer",
                        "description": "The number of ayahs in the surah."
                      },
                      "names": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "arabic": {
                              "type": "string",
                              "description": "The Arabic name of the surah."
                            },
                            "pronunciation": {
                              "type": "string",
                              "description": "The way in which a word is pronounced.."
                            },
                            "translation_phrase": {
                              "type": "string",
                              "description": "A phrase that translates the meaning of the surah."
                            },
                            "translation": {
                              "type": "string",
                              "description": "Translation of the surah name."
                            },
                            "transliteration": {
                              "type": "string",
                              "description": "Transliteration of the surah name."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Surah not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Add a new surah to the database.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Details required to add the surah",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The surah name.",
                    "example": "الفاتحة"
                  },
                  "period": {
                    "type": "string",
                    "description": "Indicates whether the surah is Makki or Madani.",
                    "example": "makki"
                  },
                  "number": {
                    "type": "number",
                    "description": "The number of the surah in the Mushaf.",
                    "example": 1
                  },
                  "mushaf_id": {
                    "type": "string",
                    "description": "The UUID of the Mushaf in which the surah belongs.",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "bismillah_status": {
                    "type": "boolean",
                    "description": "Determines whether Bismillah exists in the surah.",
                    "example": true
                  },
                  "bismillah_as_first_ayah": {
                    "type": "boolean",
                    "description": "Determines if Bismillah is the first ayah of the surah.",
                    "example": false
                  },
                  "name_translation_phrase": {
                    "type": "string",
                    "description": "The translation phrase for the surah name in the desired language.",
                    "example": "Al-Fatiha"
                  },
                  "name_pronunciation": {
                    "type": "string",
                    "description": "The pronunciation of the surah name in Arabic.",
                    "example": "Al-Fatiha"
                  },
                  "name_transliteration": {
                    "type": "string",
                    "description": "The transliteration of the surah name from Arabic to Latin.",
                    "example": "Al-Fatiha"
                  }
                },
                "required": ["name", "period", "number", "mushaf_id"]
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The surah has been successfully added to the database.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Added"
                }
              }
            }
          }
        }
      }
    },
    "/surah/{surah_uuid}": {
      "get": {
        "description": "Returns the single surah",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "surah_uuid",
            "schema": {
              "type": "string",
              "description": "UUID of the surah"
            }
          },
          {
            "in": "query",
            "name": "format",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["text", "word"],
              "description": "Specifies the format of the response. Options are 'text' or 'word'"
            }
          },
          {
            "in": "query",
            "name": "lang_code",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Language code for the translation. Defaults to 'en' if not provided"
            }
          }
        ],
        "tags": ["quran", "general"],
        "responses": {
          "200": {
            "description": "Returns the single surah",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "surah": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "description": "UUID of the surah"
                        },
                        "mushaf": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string",
                              "description": "UUID of the mushaf"
                            },
                            "short_name": {
                              "type": "string",
                              "description": "Short name of the mushaf"
                            },
                            "name": {
                              "type": "string",
                              "description": "Full name of the mushaf"
                            },
                            "source": {
                              "type": "string",
                              "description": "Source of the mushaf"
                            }
                          }
                        },
                        "names": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "arabic": {
                                "type": "string",
                                "description": "Arabic name of the surah"
                              },
                              "translation": {
                                "type": "string",
                                "description": "Translation of the surah name"
                              },
                              "translation_phrase": {
                                "type": "string",
                                "description": "Translation phrase for the surah name"
                              },
                              "pronunciation": {
                                "type": "string",
                                "description": "Pronunciation of the surah name"
                              },
                              "transliteration": {
                                "type": "string",
                                "description": "Transliteration of the surah name"
                              }
                            }
                          }
                        },
                        "period": {
                          "type": "string",
                          "description": "Period of the surah (e.g., Makki or Madani)"
                        },
                        "number": {
                          "type": "integer",
                          "description": "Surah number"
                        },
                        "bismillah_status": {
                          "type": "boolean",
                          "description": "Indicates if the surah contains 'Bismillah'"
                        },
                        "bismillah_as_first_ayah": {
                          "type": "boolean",
                          "description": "Indicates if 'Bismillah' is the first ayah of the surah"
                        },
                        "bismillah_text": {
                          "type": "string",
                          "description": "Text of 'Bismillah' if it is the first ayah"
                        },
                        "number_of_ayahs": {
                          "type": "integer",
                          "description": "Number of ayahs in the surah"
                        }
                      }
                    },
                    "ayahs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "integer",
                            "description": "Ayah number in the surah"
                          },
                          "uuid": {
                            "type": "string",
                            "description": "UUID of the ayah"
                          },
                          "sajdah": {
                            "type": "boolean",
                            "description": "Indicates if the ayah has sajdah"
                          },
                          "text": {
                            "type": "string",
                            "description": "Text of the ayah (if format is 'text')"
                          },
                          "words": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Words of the ayah (if format is 'word')"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "surah": {
                    "uuid": "ccbd8806-53e8-4658-8281-3aed10b50898",
                    "mushaf": {
                      "uuid": "f9339c7a-749a-408e-a03e-a22cd87fe3a1",
                      "short_name": "hafs",
                      "name": "Hafs an Asem",
                      "source": "tanzil"
                    },
                    "names": [
                      {
                        "arabic": "الفاتحة",
                        "translation": "The Opening",
                        "translation_phrase": "Al-Fatiha",
                        "pronunciation": "Al-Fatiha",
                        "transliteration": "Al-Fātiḥa"
                      }
                    ],
                    "period": "Makki",
                    "number": 1,
                    "bismillah_status": true,
                    "bismillah_as_first_ayah": true,
                    "bismillah_text": "بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ",
                    "number_of_ayahs": 7
                  },
                  "ayahs": [
                    {
                      "number": 1,
                      "uuid": "a2b23cd4-6f0f-4ecb-b9e0-abe34d928f12",
                      "sajdah": false,
                      "text": "بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ",
                      "words": [
                        "بِسْمِ",
                        "اللَّهِ",
                        "الرَّحْمَنِ",
                        "الرَّحِيمِ"
                      ]
                    },
                    {
                      "number": 2,
                      "uuid": "b4c3d5f4-36a8-4e99-aab9-7dba0de3e351",
                      "sajdah": false,
                      "text": "الْحَمْدُ لِلَّهِ رَبِّ الْعَالَمِينَ",
                      "words": [
                        "الْحَمْدُ",
                        "لِلَّهِ",
                        "رَبِّ",
                        "الْعَالَمِينَ"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Surah not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Edit surah with the specified UUID.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "surah_uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the surah to edit."
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Details required to update the surah",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The surah name in Arabic.",
                    "example": "الفاتحة"
                  },
                  "name_pronunciation": {
                    "type": "string",
                    "description": "Optional pronunciation of the surah name.",
                    "example": "Al-Fatiha"
                  },
                  "name_translation_phrase": {
                    "type": "string",
                    "description": "Optional translation phrase of the surah name.",
                    "example": "The Opening"
                  },
                  "name_transliteration": {
                    "type": "string",
                    "description": "Optional transliteration of the surah name.",
                    "example": "Al-Fātiḥah"
                  },
                  "period": {
                    "type": "string",
                    "description": "Indicates whether the surah is Makki or Madani.",
                    "example": "makki | madani"
                  },
                  "number": {
                    "type": "integer",
                    "description": "The surah number.",
                    "example": 1
                  },
                  "bismillah_status": {
                    "type": "boolean",
                    "description": "Determines if Bismillah is present in the surah.",
                    "example": true
                  },
                  "bismillah_as_first_ayah": {
                    "type": "boolean",
                    "description": "Indicates if Bismillah is treated as the first ayah.",
                    "example": false
                  },
                  "mushaf_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The UUID of the Mushaf associated with the surah.",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  }
                },
                "required": [
                  "name",
                  "number",
                  "bismillah_status",
                  "bismillah_as_first_ayah",
                  "mushaf_uuid"
                ]
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Surah edited successfully.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Edited"
                }
              }
            }
          },
          "404": {
            "description": "Mushaf not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_name": {
                      "type": "string",
                      "description": "A unique identifier for the error type.",
                      "example": "INTERNAL_ERROR"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message.",
                      "example": "Internal Error!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the surah identified by the specified UUID.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "surah_uuid",
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the surah to be deleted."
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "The surah identified by the UUID has been successfully deleted."
          }
        }
      }
    },
    "/ayah": {
      "description": "Returns the list of ayahs",
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "mushaf",
            "schema": {
              "type": "string",
              "default": "hafs"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "format",
            "description": "The format of the ayahs.",
            "schema": {
              "type": "string",
              "enum": ["text", "word"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "description": "Sort the list by the specified field.",
            "schema": {
              "type": "string",
              "enum": ["number", "createTime", "updateTime"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "order",
            "description": "Order of the sorting.",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "from",
            "description": "Starting point of the list (pagination).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "to",
            "description": "Ending point of the list (pagination).",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Returns the ayahs list",
            "content": {
              "application/json": {
                "example": [
                  {
                    "number": 1,
                    "uuid": "123e4567-e89b-12d3-a456-426614174000",
                    "sajdah": null,
                    "text": "In the name of Allah, the Most Gracious, the Most Merciful.",
                    "words": ["In", "the", "name", "of", "Allah", "..."]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Ayah not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "NOT_FOUND",
                  "message": "Not found!."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Add the new ayah",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "surah_uuid": {
                    "type": "string",
                    "description": "The UUID of the target surah",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "sajdeh": {
                    "type": "string",
                    "description": "Ayah have sajdeh or no",
                    "example": "vajib | mustahab | null"
                  },
                  "text": {
                    "type": "string",
                    "description": "The text of the ayah.",
                    "example": "In the name of Allah, the Most Gracious, the Most Merciful."
                  }
                },
                "required": ["surah_uuid", "text"]
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means new ayah added"
          }
        }
      }
    },
    "/ayah/{ayah_uuid}": {
      "description": "Returns the single ayah",
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Returns the single ayah",
            "content": {
              "application/json": {
                "example": {
                  "uuid": "ae819d56-5071-4ca1-b964-9e170fac1118",
                  "mushaf": "uuid-of-mushaf",
                  "surah": "uuid-of-surah",
                  "ayah_number": 1,
                  "sajdah": null,
                  "text": "هُدًى وَبُشْرَىٰ لِلْمُؤْمِنِينَ",
                  "words": [
                    {
                      "uuid": "5743e20c-ed23-443c-be2d-7ee41fa1032e",
                      "word": "هُدًى"
                    },
                    {
                      "uuid": "e3d68b7c-ef58-4598-9c4a-c96fdfe8f7b4",
                      "word": "وَبُشْرَىٰ"
                    },
                    {
                      "uuid": "b1088c7c-8eae-42a7-9741-5c37b3d11526",
                      "word": "لِلْمُؤْمِنِينَ"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Edit ayah with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string",
              "description": "The unique identifier for the ayah"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ayah_number": {
                    "type": "integer",
                    "description": "Number of ayah",
                    "example": 1
                  },
                  "sajdeh": {
                    "type": "string",
                    "description": "Ayah have sajdeh or no",
                    "example": "vajib | mustahab | null"
                  }
                }
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means the ayah edited"
          }
        }
      },
      "delete": {
        "description": "Delete ayah with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Ayah with id you specified deleted"
          }
        }
      }
    },
    "/word": {
      "post": {
        "description": "Add the new word",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ayah_uuid": {
                    "type": "string",
                    "description": "The ayah_uuid",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "word": {
                    "type": "string",
                    "description": "The word text",
                    "example": "الیوم"
                  }
                }
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means new word added"
          }
        }
      }
    },
    "/word/{word_uuid}": {
      "description": "Returns the single word",
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "word_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Returns the single word"
          }
        }
      },
      "post": {
        "description": "Edit word with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "word_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ayah_uuid": {
                    "type": "string",
                    "description": "The ayah_uuid",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "word": {
                    "type": "string",
                    "description": "New word that want to replace",
                    "example": ""
                  }
                }
              }
            }
          }
        },
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "This means the word edited"
          }
        }
      },
      "delete": {
        "description": "Delete word with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "word_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["quran"],
        "responses": {
          "200": {
            "description": "Word with id you specified deleted"
          }
        }
      }
    },
    "/translation": {
      "get": {
        "description": "Ruturn the list of all translations",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "mushaf",
            "schema": {
              "type": "string",
              "default": "hafs"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "language",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "order",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "to",
            "schema": {
              "type": "number"
            }
          }
        ],
        "tags": ["translation", "general"],
        "responses": {
          "200": {
            "description": "Returns the list of all translations"
          }
        }
      },
      "post": {
        "description": "Add new translation",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "translator_account_uuid": {
                    "type": "string",
                    "description": "The translator account uuid",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "source": {
                    "type": "string",
                    "description": "The translation text source",
                    "example": "tanzil"
                  },
                  "language": {
                    "type": "string",
                    "description": "The language of translation text",
                    "example": "en",
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "release_date": {
                    "type": "string",
                    "description": "translation release date",
                    "example": "2023-01-01"
                  }
                }
              }
            }
          }
        },
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "This means new translation created"
          }
        }
      }
    },
    "/translation/{translation_uuid}": {
      "get": {
        "description": "View translation with id you specified",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation", "general"],
        "responses": {
          "200": {
            "description": "Returns the translation with id you specified"
          }
        }
      },
      "post": {
        "description": "Edit translation with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "translator_account_uuid": {
                    "type": "string",
                    "description": "The translator account uuid",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "source": {
                    "type": "string",
                    "description": "The translation text source",
                    "example": "tanzil"
                  },
                  "language": {
                    "type": "string",
                    "description": "The language of translation text",
                    "example": "English"
                  },
                  "release_date": {
                    "type": "string",
                    "description": "Release day of the translation",
                    "example": "2023-01-01"
                  },
                  "bismillah": {
                    "type": "string",
                    "description": "The translation bismillah text",
                    "example": "بسم الله الرحمن الرحيم"
                  }
                }
              }
            }
          }
        },
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Translation with id you specified edited"
          }
        }
      },
      "delete": {
        "description": "Delete translation with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Translation with id you specified deleted"
          }
        }
      }
    },
    "/translation/text/{translation_uuid}": {
      "get": {
        "description": "View translation with id you specified",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Returns the translation_text with id you specified"
          }
        }
      },
      "post": {
        "description": "Edit/Add translation_text with id you specified",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ayah_uuid": {
                    "type": "string",
                    "description": "ayah_uuid",
                    "example": "f9339c7a-749a-408e-a03e-a22cd87fe3a1"
                  },
                  "text": {
                    "type": "string",
                    "description": "The translation text",
                    "example": "----"
                  }
                }
              }
            }
          }
        },
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Translation with id you specified edited/added"
          }
        }
      },
      "delete": {
        "description": "Delete a single translation_text",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "translation_uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "ayah_uuid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["translation"],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/phrase": {
      "get": {
        "description": "View list of phrases",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "Return the list of all phrases",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "description": "The language code",
                        "example": "en"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the language phrases",
                        "example": "complete"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Add new phrase",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": ["phrase"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phrase": {
                    "type": "string",
                    "description": "A unique phrase from the Quran to be added to the database.",
                    "example": "كتب"
                  }
                },
                "required": ["phrase"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Your phrase added"
          }
        }
      }
    },
    "/phrase/{language}": {
      "get": {
        "description": "Returns a list of phrases and their translations for the specified language code. If a translation is not available for a phrase, it will be returned as null.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "language",
            "schema": {
              "type": "string",
              "example": "en"
            },
            "description": "The language code (e.g., 'en' for English, 'ar' for Arabic)."
          }
        ],
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "Return's list of phrases related to language"
          }
        }
      },
      "post": {
        "description": "Edit or add phrases and their translations for the specified language.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "language",
            "schema": {
              "type": "string"
            },
            "description": "The language code (e.g., 'en' for English, 'ar' for Arabic)."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "example": {
                "ٱلصَّلَوٰةَ": "The prayer",
                "ٱللَّهَ": "God"
              }
            }
          },
          "description": "A JSON object containing phrases as keys and their translations as values."
        },
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "Phrases edited or added successfully"
          }
        }
      },
      "delete": {
        "description": "Delete all phrases related to the specified language code",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "language",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["phrase"],
        "responses": {
          "200": {
            "description": "All phrases related to the language code have been deleted"
          }
        }
      }
    },
    "/error": {
      "get": {
        "description": "View List of errors",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "order",
            "schema": {
              "type": "string"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "from",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },

          {
            "in": "query",
            "required": false,
            "name": "to",
            "schema": {
              "type": "number"
            }
          }
        ],
        "tags": ["report"],
        "responses": {
          "200": {
            "description": "Returns the errors list in array"
          }
        }
      }
    }
  }
}
